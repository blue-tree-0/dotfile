# ディレクトリ表示プラグイン
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add='''
nnoremap <silent><C-t> :NERDTreeToggle<CR>
'''

# UI
[[plugins]]
repo = 'Shougo/unite.vim'

# 自動pep8
[[plugins]]
repo = 'tell-k/vim-autopep8'
hook_add='''
function! Preserve(command)
  let search = @/
  let cursor_position = getpos('.')
  normal! H
  let window_position = getpos('.')
  call setpos('.', cursor_position)
  execute a:command
  let @/ = search
  call setpos('.', window_position)
  normal! zt
  call setpos('.', cursor_position)
endfunction

function! Autopep8()
  call Preserve(':silent %!autopep8 -')
endfunction

autocmd FileType python map <buffer>  <S-f> :call Autopep8()<CR>
'''

#c/c++ format
[[plugins]]
repo='rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add='''
let g:clang_format#code_style='google'
let g:clang_format#style_options = {
	\   "AlignConsecutiveAssignments": "true",
	\   "Cpp11BracedListStyle": "true",
	\   "DerivePointerAlignment": "false",
	\   "IndentCaseLabels": "true",
	\   "IndentWidth":     4,
	\   "KeepEmptyLinesAtTheStartOfBlocks": "true",
	\   "PointerAlignment": "Right",
	\   "SpacesBeforeTrailingComments": 1,
	\   "Standard":        "Cpp11",
	\   "TabWidth":        4,
	\   "UseTab":          "ForIndentation" }
autocmd FileType c,cpp map <buffer><S-f> :ClangFormat<CR>
'''

# vim上でプログラム実行
[[plugins]]
repo='thinca/vim-quickrun'
hook_add='''
autocmd FileType c,cpp,python map <buffer>  <F7> :QuickRun<CR>
'''

# 括弧補完
[[plugins]]
on_i = 1
repo='cohama/lexima.vim'

# tagbar
[[plugins]]
repo='majutsushi/tagbar'
hook_add='''
nmap <F8> :TagbarToggle<CR>
'''
