#python補完
[[plugins]]
repo ='davidhalter/jedi-vim'
on_ft = 'python'
hook_add='''
let g:jedi#completions_command = "<C-n>"
let g:jedi#popup_select_first = 0 
let g:jedi#popup_on_dot = 0
autocmd FileType python setlocal completeopt-=preview
'''

#pyenv用プラグイン
[[plugins]]
repo = 'lambdalisue/vim-pyenv'
hook_add='''
if jedi#init_python()
  function! s:jedi_auto_force_py_version() abort
    let g:jedi#force_py_version = pyenv#python#get_internal_major_version()
  endfunction
  augroup vim-pyenv-custom-augroup
    autocmd! *
    autocmd User vim-pyenv-activate-post   call s:jedi_auto_force_py_version()
    autocmd User vim-pyenv-deactivate-post call s:jedi_auto_force_py_version()
  augroup END
endif
'''

#c/c++補完
[[plugins]]
repo = 'justmao945/vim-clang'
filetypes = ['c', 'cpp']
hook_add = '''
let g:clang_c_options = '-std=gnu11'
let g:clang_cpp_options = '-std=c++11 -stdlib=libc++'
'''

#syntaxチェッカー
[[plugins]]
repo = 'w0rp/ale'
hook_add='''
let g:ale_sign_column_always = 1
let g:ale_lint_on_text_changed = 1
let g:airline#extensions#ale#enabled = 1
'''

#lightline色プラグイン
[[plugins]]
repo = 'itchyny/lightline.vim'

#シンタックスエラー数などをlightlineに表示プラグイン
[[plugins]]
repo = 'maximbaz/lightline-ale'
hook_add='''
let g:lightline={
   	  \ 'colorscheme' : 'seoul256',
	  \}
let g:lightline.component_expand = {
      \  'linter_checking': 'lightline#ale#checking',
      \  'linter_warnings': 'lightline#ale#warnings',
      \  'linter_errors': 'lightline#ale#errors',
      \  'linter_ok': 'lightline#ale#ok',
      \ }
let g:lightline.component_type = {
      \  'linter_checking': 'left',
      \  'linter_warnings': 'warning',
      \  'linter_errors': 'error',
      \  'linter_ok': 'left',
      \ }
let g:lightline.active = {
	\    'right': [[ 'linter_checking', 'linter_errors',
    \  			     'linter_warnings', 'linter_ok' ]] 
	\ }
'''

#vim window size 変更
[[plugins]]
repo='simeji/winresizer'

#設定途中
[[plugins]]
repo='mattn/sonictemplate-vim'

#コメントアウトプラグイン	
[[plugins]]
repo='scrooloose/nerdcommenter'
